package main

import (
	"image/color"
	"math/rand"
	"log"
	"github.com/hajimehoshi/ebiten/v2/ebitenutil"
	"github.com/hajimehoshi/ebiten/v2"
)

const (
	screenWidth  = 640
	screenHeight = 480
)
type line struct {
	x1 float64
	y1 float64
	x2 float64
	y2 float64
}
type game struct {
	line1 *line
	line2 *line
}
func (l *line)randLine1() *line {
	l.x1 = float64(rand.Intn(640))
	l.y1 = float64(screenHeight)
	l.x2 = float64(rand.Intn(640))  * float64(-1) 
	l.y2 = float64(-screenHeight)
	return l
}

func (l *line)randLine2() *line {
	l.x1 = float64(screenWidth)
	l.y1 = float64(rand.Intn(480))
	l.x2 = float64(-screenWidth) 
	l.y2 = float64(rand.Intn(480) * float64(-1)
	return l
}

func (g *game) Layout(outWidth, outHeight int) (w, h int) { return screenWidth, screenHeight }
func (g *game) Update() error                             { return nil }
func (g *game) Draw(screen *ebiten.Image)                 {

}

func main() {
	ebiten.SetWindowSize(screenWidth, screenHeight)
	if err := ebiten.RunGame(&game{}); err != nil {
		log.Fatal(err)
	}	
}
